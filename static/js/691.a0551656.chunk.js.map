{"version":3,"file":"static/js/691.a0551656.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","utils/api-service.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesListStyled = styled.ul``;\n\nexport const MoviesItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const MovieLink = styled(NavLink)`\n  &:hover {\n    color: ${props => props.theme.colors.raspberry};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MovieLink, MoviesItem, MoviesListStyled } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <MoviesListStyled>\n      {movies.map(({ original_title: title, id }) => (\n        <MoviesItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </MovieLink>\n        </MoviesItem>\n      ))}\n    </MoviesListStyled>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n  location: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './Section.styled';\n\nexport const Section = ({ children }) => {\n  return (\n    <>\n      <section>\n        <Container>{children}</Container>\n      </section>\n    </>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  height: 36px;\n  min-width: 300px;\n  padding: 10px 14px;\n  border: 1px solid;\n  border-color: gray;\n  outline: none;\n  margin-right: 8px;\n  font-weight: 500;\n  font-size: 16px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n","import { useEffect, useState } from 'react';\nimport { Outlet, useSearchParams, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport Notiflix, { Notify } from 'notiflix';\n\nimport { fetchMoviesByName } from 'utils/api-service';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Section } from 'components/Section/Section';\nimport { Form, Input } from './Movies.styled';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'center-top',\n  distance: '10px',\n  failure: {\n    background: '#d22566',\n  },\n});\n\nconst Movies = () => {\n  const [movie, setMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('movie');\n  const location = useLocation();\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const value = event.target.elements.movie.value;\n    value.trim() === ''\n      ? Notify.failure('Please, enter the name of the movie')\n      : setSearchParams({ movie: value });\n  };\n\n  useEffect(() => {\n    try {\n      if (!query) return;\n      fetchMoviesByName(query).then(res => {\n        if (res.length > 0) {\n          setMovie(res);\n        } else {\n          Notify.failure('Nothing found');\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [query]);\n\n  return (\n    <>\n      <Section>\n        <Form onSubmit={onFormSubmit}>\n          <Input\n            name=\"movie\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          ></Input>\n          <button>Search</button>\n        </Form>\n        {query && <MoviesList movies={movie} location={location} />}\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </Section>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '724fbc146559c3ae1940072aea85abed';\nlet path = '';\n\nexport const fetchMoviesPopular = async () => {\n  path = '/movie/popular';\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesById = async id => {\n  path = '/movie/';\n  const response = await axios.get(`${BASE_URL + path + id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMoviesByName = async name => {\n  path = '/search/movie';\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n      query: name,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesCast = async id => {\n  path = `/movie/${id}/credits`;\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  path = `/movie/${id}/reviews`;\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["MoviesListStyled","styled","MoviesItem","MovieLink","NavLink","props","theme","colors","raspberry","MoviesList","movies","location","map","title","original_title","id","to","state","from","Container","Section","children","Input","Form","Notiflix","width","position","distance","failure","background","useState","movie","setMovie","useSearchParams","searchParams","setSearchParams","query","get","useLocation","useEffect","fetchMoviesByName","then","res","length","Notify","error","console","log","onSubmit","event","preventDefault","value","target","elements","trim","name","type","autoComplete","autoFocus","placeholder","Suspense","fallback","BASE_URL","KEY","path","fetchMoviesPopular","axios","params","api_key","response","data","results","fetchMoviesById","fetchMoviesCast","cast","fetchMoviesReviews"],"sourceRoot":""}