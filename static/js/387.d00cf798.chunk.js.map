{"version":3,"file":"static/js/387.d00cf798.chunk.js","mappings":"oPAEaA,EAAcC,EAAAA,GAAAA,GAAH,sBAEXC,EAAcD,EAAAA,GAAAA,GAAH,8EAMXE,EAAeF,EAAAA,GAAAA,GAAH,mEAKZG,EAAcH,EAAAA,GAAAA,EAAH,sB,SCiBxB,EAtBgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBH,GAAII,KAAKL,EAC7B,GAAE,CAACC,IAEGF,EAAQO,OAAS,GACtB,SAACb,EAAD,UACGM,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASR,EAApB,EAAoBA,GAApB,OACX,UAACN,EAAD,YACE,UAACC,EAAD,uBAAwBY,MACxB,SAACX,EAAD,UAAcY,MAFER,EADP,OAQf,+CAEH,C,8LC7BKS,EAAW,+BACXC,EAAM,mCACRC,EAAO,GAEEC,EAAkB,mCAAG,2FAChCD,EAAO,iBADyB,SAETE,EAAAA,GAAAA,IAAA,UAAaJ,EAAWE,GAAQ,CACrDG,OAAQ,CACNC,QAASL,KAJmB,cAE1BM,EAF0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,qDAUlBC,EAAe,mCAAG,WAAMnB,GAAN,8EAC7BW,EAAO,UADsB,SAENE,EAAAA,GAAAA,IAAA,UAAaJ,EAAWE,EAAOX,GAAM,CAC1Dc,OAAQ,CACNC,QAASL,KAJgB,cAEvBM,EAFuB,yBAOtBA,EAASC,MAPa,2CAAH,sDAUfG,EAAiB,mCAAG,WAAMC,GAAN,8EAC/BV,EAAO,gBADwB,SAERE,EAAAA,GAAAA,IAAA,UAAaJ,EAAWE,GAAQ,CACrDG,OAAQ,CACNC,QAASL,EACTY,MAAOD,KALoB,cAEzBL,EAFyB,yBAQxBA,EAASC,KAAKC,SARU,2CAAH,sDAWjBK,EAAe,mCAAG,WAAMvB,GAAN,8EAC7BW,EAAI,iBAAaX,EAAb,YADyB,SAENa,EAAAA,GAAAA,IAAA,UAAaJ,EAAWE,GAAQ,CACrDG,OAAQ,CACNC,QAASL,KAJgB,cAEvBM,EAFuB,yBAOtBA,EAASC,KAAKO,MAPQ,2CAAH,sDAUfrB,EAAkB,mCAAG,WAAMH,GAAN,8EAChCW,EAAI,iBAAaX,EAAb,YAD4B,SAETa,EAAAA,GAAAA,IAAA,UAAaJ,EAAWE,GAAQ,CACrDG,OAAQ,CACNC,QAASL,KAJmB,cAE1BM,EAF0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","utils/api-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul``;\n\nexport const ReviewsItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const ReviewsTitle = styled.h3`\n  font-size: 16px;\n  margin-bottom: 8px;\n`;\n\nexport const TextContent = styled.p``;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'utils/api-service';\nimport {\n  ReviewsItem,\n  ReviewsList,\n  ReviewsTitle,\n  TextContent,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMoviesReviews(id).then(setReviews);\n  }, [id]);\n\n  return reviews.length > 0 ? (\n    <ReviewsList>\n      {reviews.map(({ author, content, id }) => (\n        <ReviewsItem key={id}>\n          <ReviewsTitle>Author: ${author}</ReviewsTitle>\n          <TextContent>{content}</TextContent>\n        </ReviewsItem>\n      ))}\n    </ReviewsList>\n  ) : (\n    <p>There are no reviews</p>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '724fbc146559c3ae1940072aea85abed';\nlet path = '';\n\nexport const fetchMoviesPopular = async () => {\n  path = '/movie/popular';\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesById = async id => {\n  path = '/movie/';\n  const response = await axios.get(`${BASE_URL + path + id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMoviesByName = async name => {\n  path = '/search/movie';\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n      query: name,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesCast = async id => {\n  path = `/movie/${id}/credits`;\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  path = `/movie/${id}/reviews`;\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["ReviewsList","styled","ReviewsItem","ReviewsTitle","TextContent","useState","reviews","setReviews","id","useParams","useEffect","fetchMoviesReviews","then","length","map","author","content","BASE_URL","KEY","path","fetchMoviesPopular","axios","params","api_key","response","data","results","fetchMoviesById","fetchMoviesByName","name","query","fetchMoviesCast","cast"],"sourceRoot":""}