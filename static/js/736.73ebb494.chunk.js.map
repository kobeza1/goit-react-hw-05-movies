{"version":3,"file":"static/js/736.73ebb494.chunk.js","mappings":"sPAEaA,EAAWC,EAAAA,GAAAA,GAAH,wRAaRC,EAAWD,EAAAA,GAAAA,GAAH,4EAKRE,EAAYF,EAAAA,GAAAA,IAAH,+CAITG,EAAgBH,EAAAA,GAAAA,EAAH,sBAEbI,EAAYJ,EAAAA,GAAAA,EAAH,iEACN,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAAvB,I,SCerB,EA/Ba,WACX,OAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAgBH,GAAII,KAAKL,EAG1B,CAFC,MAAOM,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACL,KAGF,SAACb,EAAD,UACGW,GACCA,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcX,EAAlC,EAAkCA,GAAlC,OACP,SAACX,EAAD,WACE,4BACE,SAACC,EAAD,CACEsB,IAAG,0CAAqCD,GACxCE,IAAKJ,KAEP,SAACjB,EAAD,UAAYiB,KACZ,SAAClB,EAAD,UAAgBmB,QAPLV,EADR,KAchB,C,8LCvCKc,EAAW,+BACXC,EAAM,mCACRC,EAAO,GAEEC,EAAkB,mCAAG,2FAChCD,EAAO,iBADyB,SAETE,EAAAA,GAAAA,IAAA,UAAaJ,EAAWE,GAAQ,CACrDG,OAAQ,CACNC,QAASL,KAJmB,cAE1BM,EAF0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,qDAUlBC,EAAe,mCAAG,WAAMxB,GAAN,8EAC7BgB,EAAO,UADsB,SAENE,EAAAA,GAAAA,IAAA,UAAaJ,EAAWE,EAAOhB,GAAM,CAC1DmB,OAAQ,CACNC,QAASL,KAJgB,cAEvBM,EAFuB,yBAOtBA,EAASC,MAPa,2CAAH,sDAUfG,EAAiB,mCAAG,WAAMhB,GAAN,8EAC/BO,EAAO,gBADwB,SAERE,EAAAA,GAAAA,IAAA,UAAaJ,EAAWE,GAAQ,CACrDG,OAAQ,CACNC,QAASL,EACTW,MAAOjB,KALoB,cAEzBY,EAFyB,yBAQxBA,EAASC,KAAKC,SARU,2CAAH,sDAWjBpB,EAAe,mCAAG,WAAMH,GAAN,8EAC7BgB,EAAI,iBAAahB,EAAb,YADyB,SAENkB,EAAAA,GAAAA,IAAA,UAAaJ,EAAWE,GAAQ,CACrDG,OAAQ,CACNC,QAASL,KAJgB,cAEvBM,EAFuB,yBAOtBA,EAASC,KAAKxB,MAPQ,2CAAH,sDAUf6B,EAAkB,mCAAG,WAAM3B,GAAN,8EAChCgB,EAAI,iBAAahB,EAAb,YAD4B,SAETkB,EAAAA,GAAAA,IAAA,UAAaJ,EAAWE,GAAQ,CACrDG,OAAQ,CACNC,QAASL,KAJmB,cAE1BM,EAF0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","utils/api-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 32px);\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CastItem = styled.li`\n  //   display: flex;\n  //   align-items: center;\n`;\n\nexport const CastImage = styled.img`\n  margin-bottom: 4px;\n`;\n\nexport const CharacterName = styled.p``;\n\nexport const ActorName = styled.p`\n  //   color: ${props => props.theme.colors.raspberry};\n  font-weight: 700;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCast } from 'utils/api-service';\nimport {\n  ActorName,\n  CastImage,\n  CastItem,\n  CastList,\n  CharacterName,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n  const { id } = useParams();\n\n  useEffect(() => {\n    try {\n      fetchMoviesCast(id).then(setCast);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n\n  return (\n    <CastList>\n      {cast &&\n        cast.map(({ name, character, profile_path, id }) => (\n          <CastItem key={id}>\n            <div>\n              <CastImage\n                src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                alt={name}\n              ></CastImage>\n              <ActorName>{name}</ActorName>\n              <CharacterName>{character}</CharacterName>\n            </div>\n          </CastItem>\n        ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '724fbc146559c3ae1940072aea85abed';\nlet path = '';\n\nexport const fetchMoviesPopular = async () => {\n  path = '/movie/popular';\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesById = async id => {\n  path = '/movie/';\n  const response = await axios.get(`${BASE_URL + path + id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMoviesByName = async name => {\n  path = '/search/movie';\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n      query: name,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesCast = async id => {\n  path = `/movie/${id}/credits`;\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  path = `/movie/${id}/reviews`;\n  const response = await axios.get(`${BASE_URL + path}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["CastList","styled","CastItem","CastImage","CharacterName","ActorName","props","theme","colors","raspberry","useState","cast","setCast","id","useParams","useEffect","fetchMoviesCast","then","error","console","log","map","name","character","profile_path","src","alt","BASE_URL","KEY","path","fetchMoviesPopular","axios","params","api_key","response","data","results","fetchMoviesById","fetchMoviesByName","query","fetchMoviesReviews"],"sourceRoot":""}